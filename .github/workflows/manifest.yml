name: Deploy Installation Data

on:
    workflow_dispatch:
    push:
        branches:
            - main
permissions:
    contents: read
    pages: write
    id-token: write
concurrency:
    group: "pages"
    cancel-in-progress: false
jobs:
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.10'
            - name: Checkout main
              id: checkout-main
              uses: actions/checkout@v4
              with:
                ref: 'main'
                clean: false
            - name: Create outputs folders
              if: success() || failure()
              shell: bash
              run: mkdir deploy; mkdir deploy/manifests; mkdir deploy/manifests/main
            - name: Generate manifest and shields for main branch
              id: manifest-main
              if: ${{ (success() || failure()) && steps.checkout-main.outcome == 'success' }}
              run: python build/imgen.py shields
            - name: Save main's manifest
              if: ${{ (success() || failure()) && steps.manifest-main.outcome == 'success' }}
              run: mv install_manifest.json deploy/manifests/main
            - name: Upload artifacts
              id: upload-artifacts
              if: ${{ (success() || failure()) && (steps.manifest-main.outcome == 'success') }}
              uses: actions/upload-pages-artifact@v3
              with:
                path: 'deploy/'
            - name: Deploy to GitHub Pages
              if: ${{ (success() || failure()) && steps.upload-artifacts.outcome == 'success' }}
              id: deployment
              uses: actions/deploy-pages@v4